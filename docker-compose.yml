version: '3.8'
services:
  postgres:
    image: postgres:15.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=my_health
  backend:
    build: ./server
    command: sh -c "export env_file=.env.dev && python manage.py makemigrations && python manage.py migrate && gunicorn --workers=4 --bind 0.0.0.0:8000 server.wsgi:application"
    volumes:
      - static_data:/usr/src/server/static
      - media_data:/usr/src/server/media
    ports:
      - "8000:8000"
    depends_on:
      - postgres
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_data:/usr/src/server/static/
      - media_data:/usr/src/server/media/
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf:/etc/letsencrypt/:ro
    depends_on:
      - backend
  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    # command: certonly --webroot --webroot-path=/var/www/certbot/ --email bogdanbelenesku@gmail.com --agree-tos --no-eff-email -d my-health.site
    volumes:
      - ./certbot/www:/var/www/certbot/:rw
      - ./certbot/conf:/etc/letsencrypt/:rw
    depends_on:
      - nginx
  telegram:
    build: ./telegram
    restart: always
    command: sh -c "export env_file=.env.dev && python bot.py"
    depends_on:
      - backend

volumes:
  postgres_data:
  media_data:
  static_data:
