from aiogram import types

from aiogram.utils.callback_data import CallbackData

from models import TrainingProgram, Nutrition


move = CallbackData("move", "direction")
program_filter = CallbackData("program", "id")
nutrition_filter = CallbackData("nutrition", "id")
buy = CallbackData("buy", "training_program", "sport_nutrition")
_filter = CallbackData("filter", "filter")
notification = CallbackData("notification", "program_id")
schedule_filter = CallbackData("schedule_filter", "filter", "weekday")
difficulty_filter = CallbackData("difficulty_filter", "difficulty")
week_filter = CallbackData("week_filter", "weeks")
gender_filter = CallbackData("gender", "gender")
activity_filter = CallbackData("activity", "activity")


op_filters = {
    "difficulty": difficulty_filter,
    "weeks": week_filter
}


def create_op_keyboard(param: str, value):
    if param in op_filters:
        return types.InlineKeyboardMarkup(3).add(
            types.InlineKeyboardButton("üîºÔ∏è", callback_data=op_filters[param].new(
                **{param: ">"}
            )),
            types.InlineKeyboardButton(f"{value}", callback_data=op_filters[param].new(
                **{param: "="}
            )),
            types.InlineKeyboardButton("üîΩÔ∏è", callback_data=op_filters[param].new(
                **{param: "<"}
            ))
        )


def create_training_keyboard():
    keyboard = types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", callback_data=move.new(
            direction=0
        ))
    )
    return keyboard.add(
        *move_buttons
    )


def create_move_keyboard():
    keyboard = types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=move.new(
            direction=0
        ))
    )
    return keyboard.add(
        *move_buttons
    )


def create_content_keyboard(content: TrainingProgram | Nutrition, **kwargs):
    look_up = types.InlineKeyboardButton(
        text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ...",
        callback_data=move.new(
            direction=0
        )
    )
    buy_it = types.InlineKeyboardButton(
        f"{content.price} —Ä—É–± üí∞Ô∏è" if content.price > 0. else "–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚úÖÔ∏è",
        callback_data=buy.new(
            sport_nutrition=kwargs.get("sport_nutrition", "none"),
            training_program=kwargs.get("training_program", "none")
        )
    )
    if kwargs.get("sport_nutrition") or kwargs.get("training_program"):
        keyboard = types.InlineKeyboardMarkup().add(buy_it, look_up)
    else:
        keyboard = types.InlineKeyboardMarkup().add(look_up)
    keyboard.add(
        *move_buttons
    )
    return keyboard


def create_my_health_keyboard(**kwargs):
    keyboard = types.InlineKeyboardMarkup(5).add(
        types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É", callback_data=program_filter.new(
            id=kwargs.get("training_program")
        )),
        types.InlineKeyboardButton("–û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data="quit_notification")
    )
    keyboard.add(
        types.InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="update_subscribe"),
        types.InlineKeyboardButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data=notification.new(
            program_id=kwargs.get("training_program")
        ))
    )
    keyboard.add(
        types.InlineKeyboardButton("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫–∞–ª–æ—Ä–∏–π –∏ –ë–ñ–£", callback_data="calculate_calories")
    )
    return keyboard


move_buttons = [
    types.InlineKeyboardButton("‚óÄÔ∏è", callback_data=move.new(direction=-1)),
    types.InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data='quit_content'),
    types.InlineKeyboardButton("‚ñ∂Ô∏è", callback_data=move.new(direction=1))
]


start_keyboard = types.ReplyKeyboardMarkup(3, one_time_keyboard=False).add(
    types.KeyboardButton(text="/subscribe –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üéÅ", callback_data="subscribe"),
    types.KeyboardButton(text="/my_health –ú–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ ü´ÄÔ∏è", callback_data="filter_programs"),
    types.KeyboardButton(text="/account –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ üìÉÔ∏è")
)

start_keyboard.add(
    types.KeyboardButton(text="/programs –ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ üéΩ"),
    types.KeyboardButton(text="/nutritions –°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ ü•ë"),
    types.KeyboardButton(text="/approaches –¢–µ–∫—É—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ‚è≥")
)

filter_keyboard = types.InlineKeyboardMarkup(2).add(
    types.InlineKeyboardButton("–î–∞", callback_data=_filter.new(
        filter=1
    )),
    types.InlineKeyboardButton("–ù–µ—Ç", callback_data=_filter.new(
        filter=0
    )),
)

gender_keyboard = types.InlineKeyboardMarkup(3).add(
    types.InlineKeyboardButton("–º—É–∂—Å–∫–æ–π", callback_data=gender_filter.new(
        gender="male"
    )),
    types.InlineKeyboardButton("–∂–µ–Ω—Å–∫–∏–π", callback_data=gender_filter.new(
        gender="female"
    )),
    types.InlineKeyboardButton("–¥—Ä—É–≥–æ–π", callback_data=gender_filter.new(
        gender="helicopter"
    )),
)

start_schedule_keyboard = types.InlineKeyboardMarkup(2).add(
    types.InlineKeyboardButton("–Ø —Å–∞–º –≤—Å–µ —Å–¥–µ–ª–∞—é", callback_data=schedule_filter.new(
        filter=1,
        weekday="None"
    )),
    types.InlineKeyboardButton("–£–º–æ–ª—á–∞–Ω–∏–µ –º–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç", callback_data=schedule_filter.new(
        filter=0,
        weekday="None"
    )),
)

schedule_keyboard = types.InlineKeyboardMarkup(8).add(
    types.InlineKeyboardButton("–ø–Ω", callback_data=schedule_filter.new(
        filter=1,
        weekday=0
    )),
    types.InlineKeyboardButton("–≤—Ç", callback_data=schedule_filter.new(
        filter=1,
        weekday=1
    )),
    types.InlineKeyboardButton("—Å—Ä", callback_data=schedule_filter.new(
        filter=1,
        weekday=2
    ))
)
schedule_keyboard.add(
    types.InlineKeyboardButton("—á—Ç", callback_data=schedule_filter.new(
        filter=1,
        weekday=3
    )),
    types.InlineKeyboardButton("–ø—Ç", callback_data=schedule_filter.new(
        filter=1,
        weekday=4
    )),
    types.InlineKeyboardButton("—Å–±", callback_data=schedule_filter.new(
        filter=1,
        weekday=5
    ))
)
schedule_keyboard.add(
    types.InlineKeyboardButton("–≤—Å", callback_data=schedule_filter.new(
        filter=1,
        weekday=6
    )),
    types.InlineKeyboardButton("—Ö–≤–∞—Ç–∏—Ç", callback_data=schedule_filter.new(
        filter=0,
        weekday="None"
    ))
)
activity_keyboard = types.InlineKeyboardMarkup(5).add(
    types.InlineKeyboardButton("–°–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏", callback_data=activity_filter.new(
        activity=1.2
    )),
    types.InlineKeyboardButton("–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", callback_data=activity_filter.new(
        activity=1.375
    )),
    types.InlineKeyboardButton("–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", callback_data=activity_filter.new(
        activity=1.55
    ))
)
activity_keyboard.add(
    types.InlineKeyboardButton("–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ –Ω–∞–≥—Ä—É–∑–∫–∏", callback_data=activity_filter.new(
        activity=1.725
    )),
    types.InlineKeyboardButton("–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è —Å–ø–æ—Ä—Ç–æ–º", callback_data=activity_filter.new(
        activity=1.9
    ))
)